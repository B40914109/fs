第一章：基础知识

汇编语言
汇编指令：是机器指令的助记符，便于记忆和书写

机器指令：1000100111011000
操作：将寄存器BX的内容送到AX中
汇编指令：MOV AX,BX


计算机的组成
存储器，指令和数据，存储单元，CPU对存储器的读写

a.地址总线：CPU的寻址能力
b.数据总线：CPU与器件一次数据传送量
c.控制总线：CPU对其它器件的控制能力


系统内存地址分配情况：
1.主存储器地址空间（RAM）
2.显存地址空间
3.各类ROM地址空间



第二章：寄存器

8086，20位的地址总线：物理地址 = 段地址*16 + 偏移地址

段寄存器：CS、DS、SS、ES
CS：代码段寄存器
IP：指令寄存器
CS:IP，经过地址加法器 -> 输入输出控制电路 -> 拼接为20位的地址总线 -> 通过数据总线获取数据 -> 数据存储到指令缓冲器 -> 执行。

改变寄存器控制CPU。

8086CPU有12个寄存器
通用寄存器：AX、BX、CX、DX
变址寄存器：SI、DI
指针寄存器：SP、BP
指令指针寄存器：IP
段寄存器：CS、SS、DS、ES
标志寄存器：PSW

8086是16为CPU，字长为16bit

mov/add


<******** 命令 *********>
debug：调试
-r：查看寄存器的值
-d：每次显示128个字节B
-d 2000:00 f                2000:0其实地址，F是16个地址。
-e 2000:00 12 34 56         改变内存中的内容

-u 2000：0                   将内存中的机器指令翻译成汇编指令（查看代码）
-a 073f：100                 将汇编指令的格式在内存中写入机器指令（mov ax,0123）
-t                           执行CS：IP处的指令


转移指令jmp
jmp 2AE3:3        用指令中给出的段izhi修改CS，偏移地址修改IP，可以只改变CS，(jmp bx)

先读高地址单元，在读低地址单元。

挂载
mount c d:\masm




FFFF，64kb
FFF，4kb

CPU从内存单元中要读取数据
mov bx,1000H
mov ds,bx
mov al,[0]
将10000H（1000：0）中的数据读取到al中

8086CPU不支持将数据直接送入段寄存器（硬件设计的问题）
数据->一般寄存器->段寄存器


用mov指令操作数据
mov 寄存器，数据
mov 寄存器，寄存器
mov 寄存器，内存单元
mov 内存单元，寄存器
mov 段寄存器，寄存器


16
64*1kb *10
12
